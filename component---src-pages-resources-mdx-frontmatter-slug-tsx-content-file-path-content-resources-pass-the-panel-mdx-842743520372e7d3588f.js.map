{"version":3,"file":"component---src-pages-resources-mdx-frontmatter-slug-tsx-content-file-path-content-resources-pass-the-panel-mdx-842743520372e7d3588f.js","mappings":"wLAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,GAAI,KACJC,OAAQ,SACRC,EAAG,MACFC,EAAAA,EAAAA,KAAsBR,EAAMS,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,6IAA8I,KAAMM,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,yBAA0B,KAAMM,EAAAA,cAAoBT,EAAYI,GAAI,KAAM,oBAAqB,KAAMK,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,kJAAmJ,KAAMM,EAAAA,cAAoBT,EAAYG,EAAG,KAAMM,EAAAA,cAAoBT,EAAYK,OAAQ,KAAM,cAAe,KAAMI,EAAAA,cAAoBT,EAAYK,OAAQ,KAAM,0CAA2C,KAAMI,EAAAA,cAAoBT,EAAYK,OAAQ,KAAM,0CAA2C,KAAMI,EAAAA,cAAoBT,EAAYG,EAAG,KAAMM,EAAAA,cAAoBT,EAAYK,OAAQ,KAAM,YAAa,oLAAqL,KAAMI,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,wBAAyB,KAAMM,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,0LAA2L,KAAMM,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,wBAAyB,KAAMM,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,yFAA0F,KAAMM,EAAAA,cAAoBT,EAAYI,GAAI,KAAM,SAAU,KAAMK,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,wSAA2S,KAAMM,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,6GAA8GM,EAAAA,cAAoBT,EAAYM,EAAG,CACttEI,KAAM,2EACL,2BAA4B,KAAM,KAAMD,EAAAA,cAAoBT,EAAYG,EAAG,KAAM,wOACtF,CAKA,MAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOY,QAASC,GAAaX,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,KAAsBR,EAAMS,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWb,EAAOU,EAAAA,cAAoBX,EAAmBC,IAAUD,EAAkBC,EAC9H,E,mBCbA,MAAMc,EAAgBC,IACpB,IAAIC,EACJ,IAAI,KAACC,EAAI,SAAEC,GAAYH,EACvB,MAAM,IAACI,GAAOF,EACd,OAAOP,EAAAA,cAAoBU,EAAAA,EAAQ,KAAMV,EAAAA,cAAoBW,EAAAA,KAAM,CACjEC,GAAI,cACH,qBAAsBZ,EAAAA,cAAoB,KAAM,KAAMS,SAAmF,QAAxCH,EAAmBG,EAAII,mBAA8C,IAArBP,OAA1D,EAAiGA,EAAiBQ,OAAQN,EAAS,EAIhN,SAASO,EAAiBzB,GACvC,OAAOU,EAAAA,cAAoBI,EAAed,EAAOU,EAAAA,cAAoBgB,EAAqB1B,GAC5F,C,qECUA,MAAM2B,EAAkB,CAAC,EAEnBC,EAAa,gBAAoBD,GAUhC,SAASE,EAAiBpB,GAC/B,MAAMqB,EAAoB,aAAiBF,GAG3C,OAAO,WACL,WAEE,MAA0B,mBAAfnB,EACFA,EAAWqB,GAGb,IAAIA,KAAsBrB,EACnC,GACA,CAACqB,EAAmBrB,GAExB,C","sources":["webpack://tiffatiel-art/./content/resources/pass-the-panel.mdx","webpack://tiffatiel-art/./src/pages/resources/{mdx.frontmatter__slug}.tsx","webpack://tiffatiel-art/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    h2: \"h2\",\n    strong: \"strong\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"This page describes a game called Pass the Panel where you collaboratively\\ndraw a 4-panel comic with other players, one panel at a time.\"), \"\\n\", React.createElement(_components.p, null, \"TODO: Add link to PDF\"), \"\\n\", React.createElement(_components.h2, null, \"Game description\"), \"\\n\", React.createElement(_components.p, null, \"Pass the Panel is a game where players take turns drawing the panels in a\\ncomic! Itâ€™s a fun game that you can play with any drawing supplies!\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"2+ players\"), \"\\n\", React.createElement(_components.strong, null, \"At least one piece of paper per player\"), \"\\n\", React.createElement(_components.strong, null, \"At least one pen or pencil per player\")), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"To play:\"), \" Give each player a piece of paper and something to draw with.\\nThe first turn, each player draws a 4 panel comic grid on their paper, then\\ndraws the first panel of the comic.\"), \"\\n\", React.createElement(_components.p, null, \"TODO: Add table here\"), \"\\n\", React.createElement(_components.p, null, \"After all players are done drawing their panel, each player passes their comic\\nto the player to their right. Then, everyone draws the next panel! Repeat\\nuntil all panels are drawn.\"), \"\\n\", React.createElement(_components.p, null, \"TODO: Add table here\"), \"\\n\", React.createElement(_components.p, null, \"Once the comics are done, share them, so you can all see how your stories turned out!\"), \"\\n\", React.createElement(_components.h2, null, \"Notes\"), \"\\n\", React.createElement(_components.p, null, \"I did not invent Pass the Panel, but I did come up with the \\\"Pass the Panel\\\"\\nname to try to describe this game. I first played this game in an art club in\\ncollege, but I have not been able to find references to this game online,\\nso I wanted to document its rules for other artists to play.\"), \"\\n\", React.createElement(_components.p, null, \"I often play Pass the Panel with my friends. I've also hosted workshops\\nbased on this game, including as \", React.createElement(_components.a, {\n    href: \"https://www.sourcherrycomics.com/2024/05/08/sour-cherry-con-2024-recap/\"\n  }, \"part of Sour Cherry Con\"), \"!\"), \"\\n\", React.createElement(_components.p, null, \"I always have tons of fun when I play this game and have found it a good\\nexercise for helping me let go and find the joy in drawing comics. I hope that\\nin sharing this writeup, I can help others experience these same benefits!\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/tiff/Code/tiffatiel.github.io/content/resources/pass-the-panel.mdx\";\nimport * as React from \"react\";\nimport {Link} from \"gatsby\";\nimport Layout from \"../../components/Layout\";\nconst ResourcesPage = _ref => {\n  var _mdx$frontmatter;\n  let {data, children} = _ref;\n  const {mdx} = data;\n  return React.createElement(Layout, null, React.createElement(Link, {\n    to: \"/resources\"\n  }, \"Back to resources\"), React.createElement(\"h1\", null, mdx === null || mdx === void 0 ? void 0 : (_mdx$frontmatter = mdx.frontmatter) === null || _mdx$frontmatter === void 0 ? void 0 : _mdx$frontmatter.title), children);\n};\nconst query = \"3078506302\";\nResourcesPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ResourcesPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","h2","strong","a","_provideComponents","components","React","href","wrapper","MDXLayout","ResourcesPage","_ref","_mdx$frontmatter","data","children","mdx","Layout","Link","to","frontmatter","title","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","emptyComponents","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}