{"version":3,"file":"component---src-pages-resources-mdx-frontmatter-slug-tsx-content-file-path-content-resources-sticker-making-101-mdx-730faa6d8b2341c0abb4.js","mappings":"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","sources":["webpack://tiffatiel-art/./content/resources/sticker-making-101.mdx","webpack://tiffatiel-art/./src/pages/resources/{mdx.frontmatter__slug}.tsx","webpack://tiffatiel-art/./src/components/Seo.tsx","webpack://tiffatiel-art/./src/hooks/useSiteMetadata.tsx","webpack://tiffatiel-art/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"In 2024, I created a presentation teaching people the basics of how make\\nstickers at home using a printer, a Cricut, and sticker paper. This\\npresentation was designed to accompany a class where I taught my coworkers.\"), \"\\n\", React.createElement(_components.p, null, \"On this page, I've shared the slide deck from this presentation to help\\nothers who might be interested in exploring the art of sticker making! I've\\nfound a lot of joy in making stickers at home and sharing them with my friends,\\nso in sharing this resource, I hope that I can help others find fun in making\\nstickers at home.\"), \"\\n\", React.createElement(\"iframe\", {\n    src: \"https://docs.google.com/presentation/d/e/2PACX-1vQJA1RVKpQ61q4v8jIlEfWXX8QZTMKfz6qz3epuMWB_QVOMv9-B7LjSgN0Vl3PTw_9x04GW7eLz_xMY/embed?start=false&loop=false&delayms=3000\",\n    frameborder: \"0\",\n    width: \"960\",\n    height: \"569\",\n    allowfullscreen: \"true\",\n    mozallowfullscreen: \"true\",\n    webkitallowfullscreen: \"true\"\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/tiff/Code/tiffatiel.github.io/content/resources/sticker-making-101.mdx\";\nimport * as React from \"react\";\nimport {Link} from \"gatsby\";\nimport Layout from \"../../components/Layout\";\nimport Seo from \"../../components/Seo\";\nconst ResourcesPage = _ref => {\n  var _mdx$frontmatter;\n  let {data, children} = _ref;\n  const {mdx} = data;\n  return React.createElement(Layout, null, React.createElement(Link, {\n    to: \"/resources\",\n    style: {\n      display: \"block\",\n      marginBottom: \"16px\"\n    }\n  }, \"\\u2190 Back to resources\"), React.createElement(\"h1\", null, mdx === null || mdx === void 0 ? void 0 : (_mdx$frontmatter = mdx.frontmatter) === null || _mdx$frontmatter === void 0 ? void 0 : _mdx$frontmatter.title), children);\n};\nconst query = \"3078506302\";\nexport const Head = _ref2 => {\n  var _data$mdx, _data$mdx$frontmatter;\n  let {data} = _ref2;\n  return React.createElement(Seo, {\n    title: (_data$mdx = data.mdx) === null || _data$mdx === void 0 ? void 0 : (_data$mdx$frontmatter = _data$mdx.frontmatter) === null || _data$mdx$frontmatter === void 0 ? void 0 : _data$mdx$frontmatter.title\n  });\n};\nResourcesPage\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(ResourcesPage, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import * as React from \"react\";\nimport {useSiteMetadata} from \"../hooks/useSiteMetadata\";\n\ninterface PropTypes {\n  title?: string | null;\n  image?: string | null;\n  description?: string | null;\n  canonicalPath?: string | null;\n}\n\nconst Seo: React.FC<PropTypes> = ({\n  title,\n  image,\n  description,\n  canonicalPath,\n}) => {\n  const {\n    title: defaultTitle,\n    description: defaultDescription,\n    image: defaultImage,\n    siteUrl,\n    twitterUsername,\n  } = useSiteMetadata();\n\n  const titleText = title ? `${title} | ${defaultTitle}` : defaultTitle;\n  const canonicalLink = siteUrl + canonicalPath;\n\n  const imageUrl = siteUrl + (image || defaultImage);\n\n  return (\n    <>\n      <title>{titleText}</title>\n\n      <meta name=\"image\" content={imageUrl} />\n\n      {canonicalPath ? (\n        <>\n          <link rel=\"canonical\" href={canonicalLink} />\n          <meta property=\"og:url\" content={canonicalLink} />\n        </>\n      ) : (\n        <></>\n      )}\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:title\" content={titleText} />\n      <meta\n        property=\"og:description\"\n        content={description || defaultDescription}\n      />\n      <meta property=\"og:image\" content={imageUrl} />\n\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={titleText} />\n      <meta\n        name=\"twitter:description\"\n        content={description || defaultDescription}\n      />\n      <meta name=\"twitter:image\" content={imageUrl} />\n      <meta name=\"twitter:creator\" content={twitterUsername} />\n    </>\n  );\n};\n\nexport default Seo;\n","import {graphql, useStaticQuery} from \"gatsby\";\n\nexport const useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          image\n          siteUrl\n        }\n      }\n    }\n  `);\n\n  return data.site.siteMetadata;\n};\n","/**\n * @import {MDXComponents} from 'mdx/types.js'\n * @import {Component, ReactElement, ReactNode} from 'react'\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {ReactElement}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","_provideComponents","components","React","src","frameborder","width","height","allowfullscreen","mozallowfullscreen","webkitallowfullscreen","wrapper","MDXLayout","ResourcesPage","_ref","_mdx$frontmatter","data","children","mdx","Layout","Link","to","style","display","marginBottom","frontmatter","title","Head","_ref2","_data$mdx","_data$mdx$frontmatter","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","image","description","canonicalPath","defaultTitle","defaultDescription","defaultImage","siteUrl","twitterUsername","useStaticQuery","site","siteMetadata","titleText","canonicalLink","imageUrl","name","content","rel","href","property","emptyComponents","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}