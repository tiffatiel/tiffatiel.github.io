{"version":3,"file":"component---src-pages-resources-index-tsx-e596a4c1cf88084fd490.js","mappings":"2KAsCA,MA7BiCA,IAAkC,IAAjC,MAACC,EAAK,MAAEC,EAAK,YAAEC,GAAY,EAC3D,MACEF,MAAOG,EACPD,YAAaE,EACbH,MAAOI,EAAY,QACnBC,EAAO,gBACPC,ICZWC,EAAAA,EAAAA,gBAAe,cAahBC,KAAKC,aDEXC,EAAYX,EAAWA,EAAK,MAAMG,EAAiBA,EAEnDS,EAAWN,GAAWL,GAASI,GAErC,OACEQ,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAAAA,QAAAA,KAAQF,GACRE,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,QAAQC,QAASH,IAC5BC,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,eAAeC,QAAQ,wBAClCF,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,gBAAgBC,QAASJ,IACpCE,EAAAA,cAAAA,OAAAA,CACEC,KAAK,sBACLC,QAASb,GAAeE,IAE1BS,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,gBAAgBC,QAASH,IACpCC,EAAAA,cAAAA,OAAAA,CAAMC,KAAK,kBAAkBC,QAASR,IACrC,C,6GE7BP,MAgDaS,EAAOA,IAAMH,EAAAA,cAACI,EAAAA,EAAG,CAACjB,MAAM,cAErC,UAlDsBD,IAAkD,IAAjD,KAACmB,GAA2C,EACjE,OACEL,EAAAA,cAACM,EAAAA,EAAM,KACLN,EAAAA,cAAAA,KAAAA,KAAI,aACJA,EAAAA,cAAAA,IAAAA,KAAAA,mWAOCK,EAAKE,OAAOC,MAAMC,KAAIC,IAAQ,UAC7B,MAAMC,EAAO,eAA8B,QAAjC,EAAiBD,EAAKE,mBAAW,aAAhBC,EAAkBC,MAC7C,OACEd,EAAAA,cAAAA,UAAAA,CAASe,IAAKL,EAAKM,IACjBhB,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAACiB,EAAAA,KAAI,CAACC,GAAIP,GAAuB,QAAlB,EAAED,EAAKE,mBAAW,aAAhBO,EAAkBhC,QAErCa,EAAAA,cAAAA,IAAAA,KACEA,EAAAA,cAAAA,KAAAA,KAAI,aAA2B,QAAjB,EAACU,EAAKE,mBAAW,aAAhBQ,EAAkBC,UAEnCrB,EAAAA,cAAAA,IAAAA,KACGU,EAAKY,QACNtB,EAAAA,cAACiB,EAAAA,KAAI,CAACC,GAAIP,GAAM,cAEV,IAGP,C","sources":["webpack://tiffatiel-art/./src/components/Seo.tsx","webpack://tiffatiel-art/./src/hooks/useSiteMetadata.tsx","webpack://tiffatiel-art/./src/pages/resources/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport {useSiteMetadata} from \"../hooks/useSiteMetadata\";\n\ninterface PropTypes {\n  title?: string | null;\n  image?: string | null;\n  description?: string | null;\n}\n\nconst Seo: React.FC<PropTypes> = ({title, image, description}) => {\n  const {\n    title: defaultTitle,\n    description: defaultDescription,\n    image: defaultImage,\n    siteUrl,\n    twitterUsername,\n  } = useSiteMetadata();\n\n  const titleText = title ? `${title} | ${defaultTitle}` : defaultTitle;\n\n  const imageUrl = siteUrl + (image || defaultImage);\n\n  return (\n    <>\n      <title>{titleText}</title>\n      <meta name=\"image\" content={imageUrl} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={titleText} />\n      <meta\n        name=\"twitter:description\"\n        content={description || defaultDescription}\n      />\n      <meta name=\"twitter:image\" content={imageUrl} />\n      <meta name=\"twitter:creator\" content={twitterUsername} />\n    </>\n  );\n};\n\nexport default Seo;\n","import {graphql, useStaticQuery} from \"gatsby\";\n\nexport const useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          image\n          siteUrl\n        }\n      }\n    }\n  `);\n\n  return data.site.siteMetadata;\n};\n","import * as React from \"react\";\nimport {graphql, Link, PageProps} from \"gatsby\";\nimport Layout from \"../../components/Layout\";\nimport Seo from \"../../components/Seo\";\n\nconst ResourcesPage = ({data}: PageProps<Queries.AllResourcesQuery>) => {\n  return (\n    <Layout>\n      <h1>Resources</h1>\n      <p>\n        {`I get a lot of joy out of helping others be creative and have fun.\n        I enjoy looking for ways to share things I've learned or things that\n        have helped me on my creative journey. On this page, I collect the\n        different resources I've created. If you find any of the things I've\n        created helpful, I'd love to hear from you!`}\n      </p>\n      {data.allMdx.nodes.map(node => {\n        const link = `/resources/${node.frontmatter?.slug}`;\n        return (\n          <article key={node.id}>\n            <h2>\n              <Link to={link}>{node.frontmatter?.title}</Link>\n            </h2>\n            <p>\n              <em>Published {node.frontmatter?.created}</em>\n            </p>\n            <p>\n              {node.excerpt}\n              <Link to={link}>Read more</Link>\n            </p>\n          </article>\n        );\n      })}\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query AllResources {\n    allMdx(sort: {frontmatter: {created: DESC}}) {\n      nodes {\n        frontmatter {\n          created\n          title\n          slug\n        }\n        excerpt\n        id\n      }\n    }\n  }\n`;\n\nexport const Head = () => <Seo title=\"Resources\" />;\n\nexport default ResourcesPage;\n"],"names":["_ref","title","image","description","defaultTitle","defaultDescription","defaultImage","siteUrl","twitterUsername","useStaticQuery","site","siteMetadata","titleText","imageUrl","React","name","content","Head","Seo","data","Layout","allMdx","nodes","map","node","link","frontmatter","_node$frontmatter","slug","key","id","Link","to","_node$frontmatter2","_node$frontmatter3","created","excerpt"],"sourceRoot":""}