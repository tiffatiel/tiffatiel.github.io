{"version":3,"file":"component---src-pages-index-tsx-edceacc4fbb9f260ba04.js","mappings":"qKAKA,MAmDMA,EAAcC,IAAoC,IAAnC,KAACC,EAAI,KAAEC,GAAuB,EACjD,OAAKD,EAEHE,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAAAA,IAAAA,CAAGC,KAAMH,GAAQ,GAAII,OAAO,SAASC,IAAI,cACtCJ,IAJWC,EAAAA,cAAAA,EAAAA,SAAAA,KAMX,EAiCT,UA3FkBI,IAA+C,UAA9C,KAACC,GAAwC,EAC1D,OACEL,EAAAA,cAACM,EAAAA,EAAM,KACLN,EAAAA,cAAAA,KAAAA,KAAI,cACJA,EAAAA,cAAAA,IAAAA,KAAAA,iLAIEA,EAAAA,cAAAA,IAAAA,CAAGC,KAAK,+BAA+BC,OAAO,SAASC,IAAI,cAAa,YAEpE,IAEe,QAAnB,EAACE,EAAKE,qBAAa,aAAlBC,EAAoBC,MAAMC,KAAIC,IAAC,2BAC9BX,EAAAA,cAAAA,MAAAA,CAAKY,IAAKD,EAAEE,GAAIC,MAAO,CAACC,QAAS,OAAQC,cAAe,QACtDhB,EAAAA,cAACiB,EAAAA,KAAI,CAACC,GAAE,WAAaP,EAAEQ,MACrBnB,EAAAA,cAACoB,EAAAA,EAAW,CACVC,OAAOC,EAAAA,EAAAA,GAAgB,QAAR,EAACX,EAAEY,aAAK,OAAY,QAAZ,EAAPC,EAASC,kBAAU,WAAZ,EAAPC,EAAqBC,iBACrCb,MAAO,CAACc,SAAU,KAClBC,IAAG,GAAKlB,EAAEZ,QAGdC,EAAAA,cAAAA,MAAAA,KACEA,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAACiB,EAAAA,KAAI,CAACC,GAAE,WAAaP,EAAEQ,MAASR,EAAEZ,MAAY,KAAGY,EAAEmB,KAAK,KAE1D9B,EAAAA,cAAAA,IAAAA,KAAIW,EAAEoB,aACN/B,EAAAA,cAAAA,IAAAA,KAAG,iBACHA,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAAAA,KAAAA,KACEA,EAAAA,cAACiB,EAAAA,KAAI,CAACC,GAAE,WAAaP,EAAEQ,MAAQ,cAEjCnB,EAAAA,cAACJ,EAAW,CAACE,KAAa,QAAT,EAAEa,EAAEqB,aAAK,aAAPC,EAASC,MAAOnC,KAAK,UACxCC,EAAAA,cAACJ,EAAW,CAACE,KAAa,QAAT,EAAEa,EAAEqB,aAAK,aAAPG,EAASC,SAAUrC,KAAK,aAC3CC,EAAAA,cAACJ,EAAW,CAACE,KAAa,QAAT,EAAEa,EAAEqB,aAAK,aAAPK,EAASC,MAAOvC,KAAK,UACxCC,EAAAA,cAACJ,EAAW,CAACE,KAAa,QAAT,EAAEa,EAAEqB,aAAK,aAAPO,EAASC,EAAGzC,KAAK,MACpCC,EAAAA,cAACJ,EAAW,CAACE,KAAa,QAAT,EAAEa,EAAEqB,aAAK,aAAPS,EAASC,UAAW3C,KAAK,cAC5CC,EAAAA,cAACJ,EAAW,CAACE,KAAa,QAAT,EAAEa,EAAEqB,aAAK,aAAPW,EAASC,SAAU7C,KAAK,eAG3C,KAGH,C","sources":["webpack://tiffatiel-art/./src/pages/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport {graphql, Link, PageProps} from \"gatsby\";\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nimport Layout from \"../components/Layout\";\n\nconst IndexPage = ({data}: PageProps<Queries.AllComicsQuery>) => {\n  return (\n    <Layout>\n      <h1>My comics!</h1>\n      <p>\n        {`I'm an independent comic artist focused on creating short stories with\n        cute art and emotional themes. My work is available to read both for\n        free online and `}\n        <a href=\"https://store.tiffatiel.com/\" target=\"_blank\" rel=\"noreferrer\">\n          in print\n        </a>\n        .\n        {data.allComicsYaml?.nodes.map(c => (\n          <div key={c.id} style={{display: \"flex\", flexDirection: \"row\"}}>\n            <Link to={`/comics/${c.slug}`}>\n              <GatsbyImage\n                image={getImage(c.cover?.outerFront?.childImageSharp)}\n                style={{minWidth: 200}}\n                alt={`${c.name}`}\n              />\n            </Link>\n            <div>\n              <h2>\n                <Link to={`/comics/${c.slug}`}>{c.name}</Link> ({c.year})\n              </h2>\n              <p>{c.description}</p>\n              <p>Available on:</p>\n              <ul>\n                <li>\n                  <Link to={`/comics/${c.slug}`}>This site</Link>\n                </li>\n                <AvailableOn link={c.links?.store} name=\"Print\" />\n                <AvailableOn link={c.links?.webtoons} name=\"Webtoons\" />\n                <AvailableOn link={c.links?.tapas} name=\"Tapas\" />\n                <AvailableOn link={c.links?.x} name=\"X\" />\n                <AvailableOn link={c.links?.instagram} name=\"Instagram\" />\n                <AvailableOn link={c.links?.facebook} name=\"Facebook\" />\n              </ul>\n            </div>\n          </div>\n        ))}\n      </p>\n    </Layout>\n  );\n};\n\ninterface AvailableOnProps {\n  link?: string | null;\n  name: string;\n}\n\nconst AvailableOn = ({link, name}: AvailableOnProps) => {\n  if (!link) return <></>;\n  return (\n    <li>\n      <a href={link || \"\"} target=\"_blank\" rel=\"noreferrer\">\n        {name}\n      </a>\n    </li>\n  );\n};\n\nexport const query = graphql`\n  query AllComics {\n    allComicsYaml {\n      nodes {\n        name\n        slug\n        year\n        id\n        description\n        links {\n          store\n          webtoons\n          tapas\n          x\n          instagram\n          facebook\n        }\n        cover {\n          outerFront {\n            childImageSharp {\n              gatsbyImageData(width: 200, placeholder: BLURRED)\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n"],"names":["AvailableOn","_ref2","link","name","React","href","target","rel","_ref","data","Layout","allComicsYaml","_data$allComicsYaml","nodes","map","c","key","id","style","display","flexDirection","Link","to","slug","GatsbyImage","image","getImage","cover","_c$cover","outerFront","_c$cover$outerFront","childImageSharp","minWidth","alt","year","description","links","_c$links","store","_c$links2","webtoons","_c$links3","tapas","_c$links4","x","_c$links5","instagram","_c$links6","facebook"],"sourceRoot":""}